name: Build macOS Universal Binary

on:
  push:
    branches:
      - master

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Install Rust and the macOS cross-compilation targets
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustup target add x86_64-apple-darwin aarch64-apple-darwin

      # Step 3: Install dependencies for building Rust
      - name: Install dependencies
        run: |
          brew install --formula cmake pkg-config openssl

      # Step 4: Set the minimum macOS deployment target and build for both architectures
      - name: Build macOS Binaries for both architectures
        env:
          RUSTFLAGS: -C link-args=-mmacosx-version-min=12.0
        run: |
          # Build for x86_64 (Intel/AMD)
          cargo build --release --target x86_64-apple-darwin

          # Build for aarch64 (Apple Silicon)
          cargo build --release --target aarch64-apple-darwin

      # Step 5: Create a universal binary (fat binary)
      - name: Create Universal Binary (Fat Binary)
        run: |
          lipo -create -output librespot-auth-universal \
            target/x86_64-apple-darwin/release/librespot-auth \
            target/aarch64-apple-darwin/release/librespot-auth

      # Step 6: Upload the universal binary as an artifact
      - name: Upload Universal Binary
        uses: actions/upload-artifact@v3
        with:
          name: librespot-auth-universal
          path: librespot-auth-universal
